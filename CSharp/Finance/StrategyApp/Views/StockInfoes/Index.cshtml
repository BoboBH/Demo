@using Common.Data
@model PaginatedList<Business.Model.StockInfo>

@{
    ViewData["Title"] = "Stock Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find: <input type="text" name="search" value="@ViewData["SearchFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                Type
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-searchFilter="@ViewData["searchFilter"]">  Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["BriefNameSortParm"]" asp-route-searchFilter="@ViewData["searchFilter"]">  Brief Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["SymbolSortParm"]" asp-route-searchFilter="@ViewData["searchFilter"]">  Symbol</a>
            </th>
            <th>
                Market
            </th>
            <th>
                Price
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-searchFilter="@ViewData["searchFilter"]">  Date</a>
            </th>
            <th>
                Status
            </th>
            <th>
                Createdon
            </th>
            <th>
                Modifiedon
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BriefName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Symbol)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Market)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedOn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModifiedOn)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="1"
   asp-route-search="@ViewData["searchFilter"]"
   class="btn btn-default @prevDisabled">
    Frist
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-search="@ViewData["searchFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-search="@ViewData["searchFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@Model.TotalPages"
   asp-route-search="@ViewData["searchFilter"]"
   class="btn btn-default @nextDisabled">
    Last
</a>
<label>@(String.Format("{0}/{1}", Model.PageIndex,Model.TotalPages))</label>
