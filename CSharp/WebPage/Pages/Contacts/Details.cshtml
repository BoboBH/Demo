@page
@using Microsoft.AspNetCore.Identity
@using WebPage.Authorization
@using WebPage.Data
@namespace WebPage.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using WebPage.Authorization;
@using Microsoft.AspNetCore.Authorization
@using WebPage.Models
@inject IAuthorizationService AuthorizationService
@model WebPage.Pages.Contacts.DetailsModel

@{
    ViewData["Title"] = "Details";
    Layout = "~/Pages/_Layout.cshtml";
}

<h2>Details</h2>

<div>
    <h4>Contact</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Contact.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Contact.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Contact.Address)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Contact.Address)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Contact.City)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Contact.City)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Contact.State)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Contact.State)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Contact.Zip)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Contact.Zip)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Contact.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Contact.Email)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Contact.OwnerId)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Contact.OwnerId)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Contact.status)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Contact.status)
        </dd>
    </dl>
</div>
@if (Model != null && Model.Contact != null && Model.Contact.status != ContactStatus.Approved)
{
    @if ((await AuthorizationService.AuthorizeAsync(
    User, Model.Contact, ContactOperations.Approve)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Contact.Id" />
            <input type="hidden" name="status" value="@ContactStatus.Approved" />
            <button type="submit" class="btn btn-xs btn-success">Approve</button>
        </form>
    }
}

@if (Model != null && Model.Contact != null && Model.Contact.status != ContactStatus.Rejected)
{
    @if ((await AuthorizationService.AuthorizeAsync(
    User, Model.Contact, ContactOperations.Reject)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Contact.Id" />
            <input type="hidden" name="status" value="@ContactStatus.Rejected" />
            <button type="submit" class="btn btn-xs btn-success">Reject</button>
        </form>
    }
}

<div>
    @if ((await AuthorizationService.AuthorizeAsync(User, Model.Contact, ContactOperations.Update)).Succeeded)
    {
        <a asp-page="./Edit" asp-route-id="@Model.Contact.Id">Edit</a> <text>|</text>
    }
    <a asp-page="./Index">Back to List</a>
</div>
