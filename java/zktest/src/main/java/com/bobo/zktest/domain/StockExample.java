package com.bobo.zktest.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class StockExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table stock
	 * @mbg.generated  Tue Dec 24 14:16:56 CST 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table stock
	 * @mbg.generated  Tue Dec 24 14:16:56 CST 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table stock
	 * @mbg.generated  Tue Dec 24 14:16:56 CST 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock
	 * @mbg.generated  Tue Dec 24 14:16:56 CST 2019
	 */
	public StockExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock
	 * @mbg.generated  Tue Dec 24 14:16:56 CST 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock
	 * @mbg.generated  Tue Dec 24 14:16:56 CST 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock
	 * @mbg.generated  Tue Dec 24 14:16:56 CST 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock
	 * @mbg.generated  Tue Dec 24 14:16:56 CST 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock
	 * @mbg.generated  Tue Dec 24 14:16:56 CST 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock
	 * @mbg.generated  Tue Dec 24 14:16:56 CST 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock
	 * @mbg.generated  Tue Dec 24 14:16:56 CST 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock
	 * @mbg.generated  Tue Dec 24 14:16:56 CST 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock
	 * @mbg.generated  Tue Dec 24 14:16:56 CST 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table stock
	 * @mbg.generated  Tue Dec 24 14:16:56 CST 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table stock
	 * @mbg.generated  Tue Dec 24 14:16:56 CST 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("id like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("id not like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<String> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<String> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("name is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("name is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("name =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("name <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("name >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("name >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("name <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("name <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("name like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("name not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("name in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("name not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("name between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("name not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andSymbolIsNull() {
			addCriterion("symbol is null");
			return (Criteria) this;
		}

		public Criteria andSymbolIsNotNull() {
			addCriterion("symbol is not null");
			return (Criteria) this;
		}

		public Criteria andSymbolEqualTo(String value) {
			addCriterion("symbol =", value, "symbol");
			return (Criteria) this;
		}

		public Criteria andSymbolNotEqualTo(String value) {
			addCriterion("symbol <>", value, "symbol");
			return (Criteria) this;
		}

		public Criteria andSymbolGreaterThan(String value) {
			addCriterion("symbol >", value, "symbol");
			return (Criteria) this;
		}

		public Criteria andSymbolGreaterThanOrEqualTo(String value) {
			addCriterion("symbol >=", value, "symbol");
			return (Criteria) this;
		}

		public Criteria andSymbolLessThan(String value) {
			addCriterion("symbol <", value, "symbol");
			return (Criteria) this;
		}

		public Criteria andSymbolLessThanOrEqualTo(String value) {
			addCriterion("symbol <=", value, "symbol");
			return (Criteria) this;
		}

		public Criteria andSymbolLike(String value) {
			addCriterion("symbol like", value, "symbol");
			return (Criteria) this;
		}

		public Criteria andSymbolNotLike(String value) {
			addCriterion("symbol not like", value, "symbol");
			return (Criteria) this;
		}

		public Criteria andSymbolIn(List<String> values) {
			addCriterion("symbol in", values, "symbol");
			return (Criteria) this;
		}

		public Criteria andSymbolNotIn(List<String> values) {
			addCriterion("symbol not in", values, "symbol");
			return (Criteria) this;
		}

		public Criteria andSymbolBetween(String value1, String value2) {
			addCriterion("symbol between", value1, value2, "symbol");
			return (Criteria) this;
		}

		public Criteria andSymbolNotBetween(String value1, String value2) {
			addCriterion("symbol not between", value1, value2, "symbol");
			return (Criteria) this;
		}

		public Criteria andDateIsNull() {
			addCriterion("date is null");
			return (Criteria) this;
		}

		public Criteria andDateIsNotNull() {
			addCriterion("date is not null");
			return (Criteria) this;
		}

		public Criteria andDateEqualTo(Date value) {
			addCriterion("date =", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateNotEqualTo(Date value) {
			addCriterion("date <>", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateGreaterThan(Date value) {
			addCriterion("date >", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateGreaterThanOrEqualTo(Date value) {
			addCriterion("date >=", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateLessThan(Date value) {
			addCriterion("date <", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateLessThanOrEqualTo(Date value) {
			addCriterion("date <=", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateIn(List<Date> values) {
			addCriterion("date in", values, "date");
			return (Criteria) this;
		}

		public Criteria andDateNotIn(List<Date> values) {
			addCriterion("date not in", values, "date");
			return (Criteria) this;
		}

		public Criteria andDateBetween(Date value1, Date value2) {
			addCriterion("date between", value1, value2, "date");
			return (Criteria) this;
		}

		public Criteria andDateNotBetween(Date value1, Date value2) {
			addCriterion("date not between", value1, value2, "date");
			return (Criteria) this;
		}

		public Criteria andPriceIsNull() {
			addCriterion("price is null");
			return (Criteria) this;
		}

		public Criteria andPriceIsNotNull() {
			addCriterion("price is not null");
			return (Criteria) this;
		}

		public Criteria andPriceEqualTo(BigDecimal value) {
			addCriterion("price =", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceNotEqualTo(BigDecimal value) {
			addCriterion("price <>", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceGreaterThan(BigDecimal value) {
			addCriterion("price >", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("price >=", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceLessThan(BigDecimal value) {
			addCriterion("price <", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceLessThanOrEqualTo(BigDecimal value) {
			addCriterion("price <=", value, "price");
			return (Criteria) this;
		}

		public Criteria andPriceIn(List<BigDecimal> values) {
			addCriterion("price in", values, "price");
			return (Criteria) this;
		}

		public Criteria andPriceNotIn(List<BigDecimal> values) {
			addCriterion("price not in", values, "price");
			return (Criteria) this;
		}

		public Criteria andPriceBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("price between", value1, value2, "price");
			return (Criteria) this;
		}

		public Criteria andPriceNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("price not between", value1, value2, "price");
			return (Criteria) this;
		}

		public Criteria andMarketIsNull() {
			addCriterion("market is null");
			return (Criteria) this;
		}

		public Criteria andMarketIsNotNull() {
			addCriterion("market is not null");
			return (Criteria) this;
		}

		public Criteria andMarketEqualTo(String value) {
			addCriterion("market =", value, "market");
			return (Criteria) this;
		}

		public Criteria andMarketNotEqualTo(String value) {
			addCriterion("market <>", value, "market");
			return (Criteria) this;
		}

		public Criteria andMarketGreaterThan(String value) {
			addCriterion("market >", value, "market");
			return (Criteria) this;
		}

		public Criteria andMarketGreaterThanOrEqualTo(String value) {
			addCriterion("market >=", value, "market");
			return (Criteria) this;
		}

		public Criteria andMarketLessThan(String value) {
			addCriterion("market <", value, "market");
			return (Criteria) this;
		}

		public Criteria andMarketLessThanOrEqualTo(String value) {
			addCriterion("market <=", value, "market");
			return (Criteria) this;
		}

		public Criteria andMarketLike(String value) {
			addCriterion("market like", value, "market");
			return (Criteria) this;
		}

		public Criteria andMarketNotLike(String value) {
			addCriterion("market not like", value, "market");
			return (Criteria) this;
		}

		public Criteria andMarketIn(List<String> values) {
			addCriterion("market in", values, "market");
			return (Criteria) this;
		}

		public Criteria andMarketNotIn(List<String> values) {
			addCriterion("market not in", values, "market");
			return (Criteria) this;
		}

		public Criteria andMarketBetween(String value1, String value2) {
			addCriterion("market between", value1, value2, "market");
			return (Criteria) this;
		}

		public Criteria andMarketNotBetween(String value1, String value2) {
			addCriterion("market not between", value1, value2, "market");
			return (Criteria) this;
		}

		public Criteria andCreatedonIsNull() {
			addCriterion("createdon is null");
			return (Criteria) this;
		}

		public Criteria andCreatedonIsNotNull() {
			addCriterion("createdon is not null");
			return (Criteria) this;
		}

		public Criteria andCreatedonEqualTo(Date value) {
			addCriterion("createdon =", value, "createdon");
			return (Criteria) this;
		}

		public Criteria andCreatedonNotEqualTo(Date value) {
			addCriterion("createdon <>", value, "createdon");
			return (Criteria) this;
		}

		public Criteria andCreatedonGreaterThan(Date value) {
			addCriterion("createdon >", value, "createdon");
			return (Criteria) this;
		}

		public Criteria andCreatedonGreaterThanOrEqualTo(Date value) {
			addCriterion("createdon >=", value, "createdon");
			return (Criteria) this;
		}

		public Criteria andCreatedonLessThan(Date value) {
			addCriterion("createdon <", value, "createdon");
			return (Criteria) this;
		}

		public Criteria andCreatedonLessThanOrEqualTo(Date value) {
			addCriterion("createdon <=", value, "createdon");
			return (Criteria) this;
		}

		public Criteria andCreatedonIn(List<Date> values) {
			addCriterion("createdon in", values, "createdon");
			return (Criteria) this;
		}

		public Criteria andCreatedonNotIn(List<Date> values) {
			addCriterion("createdon not in", values, "createdon");
			return (Criteria) this;
		}

		public Criteria andCreatedonBetween(Date value1, Date value2) {
			addCriterion("createdon between", value1, value2, "createdon");
			return (Criteria) this;
		}

		public Criteria andCreatedonNotBetween(Date value1, Date value2) {
			addCriterion("createdon not between", value1, value2, "createdon");
			return (Criteria) this;
		}

		public Criteria andModifiedonIsNull() {
			addCriterion("modifiedon is null");
			return (Criteria) this;
		}

		public Criteria andModifiedonIsNotNull() {
			addCriterion("modifiedon is not null");
			return (Criteria) this;
		}

		public Criteria andModifiedonEqualTo(Date value) {
			addCriterion("modifiedon =", value, "modifiedon");
			return (Criteria) this;
		}

		public Criteria andModifiedonNotEqualTo(Date value) {
			addCriterion("modifiedon <>", value, "modifiedon");
			return (Criteria) this;
		}

		public Criteria andModifiedonGreaterThan(Date value) {
			addCriterion("modifiedon >", value, "modifiedon");
			return (Criteria) this;
		}

		public Criteria andModifiedonGreaterThanOrEqualTo(Date value) {
			addCriterion("modifiedon >=", value, "modifiedon");
			return (Criteria) this;
		}

		public Criteria andModifiedonLessThan(Date value) {
			addCriterion("modifiedon <", value, "modifiedon");
			return (Criteria) this;
		}

		public Criteria andModifiedonLessThanOrEqualTo(Date value) {
			addCriterion("modifiedon <=", value, "modifiedon");
			return (Criteria) this;
		}

		public Criteria andModifiedonIn(List<Date> values) {
			addCriterion("modifiedon in", values, "modifiedon");
			return (Criteria) this;
		}

		public Criteria andModifiedonNotIn(List<Date> values) {
			addCriterion("modifiedon not in", values, "modifiedon");
			return (Criteria) this;
		}

		public Criteria andModifiedonBetween(Date value1, Date value2) {
			addCriterion("modifiedon between", value1, value2, "modifiedon");
			return (Criteria) this;
		}

		public Criteria andModifiedonNotBetween(Date value1, Date value2) {
			addCriterion("modifiedon not between", value1, value2, "modifiedon");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("status is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("status is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(Integer value) {
			addCriterion("status =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(Integer value) {
			addCriterion("status <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(Integer value) {
			addCriterion("status >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("status >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(Integer value) {
			addCriterion("status <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(Integer value) {
			addCriterion("status <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<Integer> values) {
			addCriterion("status in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<Integer> values) {
			addCriterion("status not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(Integer value1, Integer value2) {
			addCriterion("status between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(Integer value1, Integer value2) {
			addCriterion("status not between", value1, value2, "status");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table stock
	 * @mbg.generated  Tue Dec 24 14:16:56 CST 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table stock
     *
     * @mbg.generated do_not_delete_during_merge Tue Dec 24 14:16:56 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}